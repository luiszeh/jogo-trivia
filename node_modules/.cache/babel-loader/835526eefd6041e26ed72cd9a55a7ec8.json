{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/components/QuestionInfo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport UniqueButton from './UniqueButton';\nimport Button from './Button';\nimport './questioninfo.css';\n\nclass QuestionInfo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      index: 0\n    };\n    this.changeColorsAnswer = this.changeColorsAnswer.bind(this);\n    this.changeButtonVisibility = this.changeButtonVisibility.bind(this);\n  }\n\n  changeButtonVisibility() {\n    const buttonNextQuestion = document.getElementsByClassName('btn-next')[0];\n    buttonNextQuestion.classList.add('visible');\n  }\n\n  changeColorsAnswer() {\n    const correct = document.getElementById('correct-answer');\n    const incorrect = document.getElementsByName('incorrect-answer');\n    incorrect.forEach(question => {\n      question.className = 'questionWrong';\n    });\n    correct.className = 'questionCorrect';\n  }\n\n  sumUserPoints() {\n    const basePoints = 10;\n    const {\n      timer,\n      questions\n    } = this.props;\n    const {\n      index\n    } = this.state;\n\n    const difficultyMultiplier = () => {\n      if (questions[index].difficulty === 'easy') {\n        return 1;\n      }\n\n      if (questions[index].difficulty === 'medium') {\n        return 2;\n      }\n\n      if (questions[index].difficulty === 'hard') {\n        const hardMultiplier = 3;\n        return hardMultiplier;\n      }\n    };\n\n    const points = basePoints + timer * difficultyMultiplier();\n    const locals = JSON.parse(localStorage.getItem('state'));\n    localStorage.setItem('state', JSON.stringify({\n      player: { ...locals.player,\n        score: points\n      }\n    }));\n  }\n\n  render() {\n    const {\n      index\n    } = this.state;\n    const {\n      questions,\n      disabled\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"question-category\",\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Category:\"), `${questions[index].category}`), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Question:\"), `${questions[index].question}`), /*#__PURE__*/React.createElement(UniqueButton, {\n      disabled: disabled,\n      className: \"correct-answer\",\n      onClick: () => {\n        this.changeButtonVisibility();\n        this.changeColorsAnswer();\n        this.sumUserPoints();\n      },\n      innerText: questions[index].correct_answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), questions[index].incorrect_answers.map((incorrect, i) => /*#__PURE__*/React.createElement(Button, {\n      className: \"incorrect-answer\",\n      key: index,\n      dataTestId: `wrong-answer-${i}`,\n      onClick: () => {\n        this.changeButtonVisibility();\n        this.changeColorsAnswer();\n      },\n      innerText: incorrect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-next\",\n      type: \"button\",\n      className: \"btn-next\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"PR\\xD3XIMA\"));\n  }\n\n}\n\nQuestionInfo.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  disabled: PropTypes.bool,\n  timer: PropTypes.number.isRequired\n};\nQuestionInfo.defaultProps = {\n  disabled: false\n};\nexport default QuestionInfo;","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/components/QuestionInfo.js"],"names":["React","Component","PropTypes","UniqueButton","Button","QuestionInfo","constructor","state","index","changeColorsAnswer","bind","changeButtonVisibility","buttonNextQuestion","document","getElementsByClassName","classList","add","correct","getElementById","incorrect","getElementsByName","forEach","question","className","sumUserPoints","basePoints","timer","questions","props","difficultyMultiplier","difficulty","hardMultiplier","points","locals","JSON","parse","localStorage","getItem","setItem","stringify","player","score","render","disabled","category","correct_answer","incorrect_answers","map","i","propTypes","arrayOf","object","isRequired","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport UniqueButton from './UniqueButton';\nimport Button from './Button';\nimport './questioninfo.css';\n\nclass QuestionInfo extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      index: 0,\n    };\n\n    this.changeColorsAnswer = this.changeColorsAnswer.bind(this);\n    this.changeButtonVisibility = this.changeButtonVisibility.bind(this);\n  }\n\n  changeButtonVisibility() {\n    const buttonNextQuestion = document.getElementsByClassName('btn-next')[0];\n    buttonNextQuestion.classList.add('visible');\n  }\n\n  changeColorsAnswer() {\n    const correct = document.getElementById('correct-answer');\n    const incorrect = document.getElementsByName('incorrect-answer');\n    incorrect.forEach((question) => { question.className = 'questionWrong'; });\n    correct.className = 'questionCorrect';\n  }\n\n  sumUserPoints() {\n    const basePoints = 10;\n    const { timer, questions } = this.props;\n    const { index } = this.state;\n    const difficultyMultiplier = () => {\n      if (questions[index].difficulty === 'easy') {\n        return 1;\n      }\n      if (questions[index].difficulty === 'medium') {\n        return 2;\n      }\n      if (questions[index].difficulty === 'hard') {\n        const hardMultiplier = 3;\n        return hardMultiplier;\n      }\n    };\n    const points = basePoints + (timer * difficultyMultiplier());\n    const locals = JSON.parse(localStorage.getItem('state'));\n    localStorage.setItem('state', JSON.stringify({\n      player: { ...locals.player, score: points },\n    }));\n  }\n\n  render() {\n    const { index } = this.state;\n    const { questions, disabled } = this.props;\n\n    return (\n      <div className=\"question-container\">\n        <p className=\"question-category\" data-testid=\"question-category\">\n          <span className=\"category\">Category:</span>\n          {`${questions[index].category}`}\n        </p>\n        <p data-testid=\"question-text\" className=\"question-text\">\n          <span className=\"question\">Question:</span>\n          {`${questions[index].question}`}\n        </p>\n        {/* Aqui eu resolvi chamar de UniqueButton\n        pois ele não compartilha características\n        com os botões de resposta errada */}\n        <UniqueButton\n          disabled={ disabled }\n          className=\"correct-answer\"\n          onClick={ () => {\n            this.changeButtonVisibility();\n            this.changeColorsAnswer();\n            this.sumUserPoints();\n          } }\n          innerText={ questions[index].correct_answer }\n        />\n        {questions[index].incorrect_answers.map((incorrect, i) => (\n          <Button\n            className=\"incorrect-answer\"\n            key={ index }\n            dataTestId={ `wrong-answer-${i}` }\n            onClick={ () => {\n              this.changeButtonVisibility();\n              this.changeColorsAnswer();\n            } }\n            innerText={ incorrect }\n          />\n        ))}\n        <button\n          data-testid=\"btn-next\"\n          type=\"button\"\n          className=\"btn-next\"\n        >\n          PRÓXIMA\n        </button>\n      </div>\n    );\n  }\n}\n\nQuestionInfo.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  disabled: PropTypes.bool,\n  timer: PropTypes.number.isRequired,\n};\n\nQuestionInfo.defaultProps = {\n  disabled: false,\n};\n\nexport default QuestionInfo;\n"]},"metadata":{},"sourceType":"module"}