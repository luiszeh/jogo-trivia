{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport './feedback.css';\n\nclass FeedBack extends React.Component {\n  constructor() {\n    super();\n    this.playAgain = this.playAgain.bind(this);\n    this.goToRanking = this.goToRanking.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      player: {\n        name,\n        email,\n        score\n      }\n    } = JSON.parse(localStorage.getItem('state'));\n    const playerImage = `https://www.gravatar.com/avatar/${md5(email).toString()}`;\n    const newRanking = {\n      playerImage,\n      score,\n      name\n    };\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n\n    if (ranking) {\n      localStorage.setItem('ranking', JSON.stringify([...ranking, newRanking]));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([newRanking]));\n    }\n  }\n\n  playAgain() {\n    const {\n      history\n    } = this.props;\n    history.push('/');\n  }\n\n  feedBackMessage() {\n    const {\n      player: {\n        assertions\n      }\n    } = JSON.parse(localStorage.getItem('state'));\n    const minAssertions = 3;\n    return assertions < minAssertions ? 'Podia ser melhor...' : 'Mandou bem!';\n  }\n\n  goToRanking() {\n    const {\n      history\n    } = this.props;\n    history.push('/ranking');\n  }\n\n  render() {\n    const {\n      player: {\n        name,\n        assertions,\n        gravatarEmail,\n        score\n      }\n    } = JSON.parse(localStorage.getItem('state'));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"feedback-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://www.gravatar.com/avatar/${md5(gravatarEmail).toString()}`,\n      \"data-testid\": \"header-profile-picture\",\n      alt: `Name:${name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      \"data-testid\": \"header-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Jogador:\"), name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"total-score\",\n      \"data-testid\": \"header-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, score)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Resultados\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"assertions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"N\\xFAmero de acertos:\", /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, assertions)), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"points\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, \"Pontua\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"feedback-total-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, score)), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"feedback-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, this.feedBackMessage()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-play-again\",\n      onClick: this.playAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Jogar Novamente\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"btn-ranking\",\n      onClick: this.goToRanking,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Ver Ranking\"))));\n  }\n\n}\n\nFeedBack.propTypes = {\n  history: PropTypes.func\n}.isRequired;\nexport default FeedBack;","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/pages/Feedback.js"],"names":["React","md5","PropTypes","FeedBack","Component","constructor","playAgain","bind","goToRanking","componentDidMount","player","name","email","score","JSON","parse","localStorage","getItem","playerImage","toString","newRanking","ranking","setItem","stringify","history","props","push","feedBackMessage","assertions","minAssertions","render","gravatarEmail","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport md5 from 'crypto-js/md5';\nimport PropTypes from 'prop-types';\nimport './feedback.css';\n\nclass FeedBack extends React.Component {\n  constructor() {\n    super();\n    this.playAgain = this.playAgain.bind(this);\n    this.goToRanking = this.goToRanking.bind(this);\n  }\n\n  componentDidMount() {\n    const { player: { name, email, score } } = JSON.parse(localStorage.getItem('state'));\n    const playerImage = `https://www.gravatar.com/avatar/${md5(email).toString()}`;\n\n    const newRanking = {\n      playerImage,\n      score,\n      name,\n    };\n\n    const ranking = JSON.parse(localStorage.getItem('ranking'));\n\n    if (ranking) {\n      localStorage\n        .setItem('ranking',\n          JSON.stringify([...ranking, newRanking]));\n    } else {\n      localStorage.setItem('ranking', JSON.stringify([newRanking]));\n    }\n  }\n\n  playAgain() {\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  feedBackMessage() {\n    const { player: { assertions } } = JSON.parse(localStorage.getItem('state'));\n    const minAssertions = 3;\n    return assertions < minAssertions ? 'Podia ser melhor...' : 'Mandou bem!';\n  }\n\n  goToRanking() {\n    const { history } = this.props;\n    history.push('/ranking');\n  }\n\n  render() {\n    const {\n      player:\n      {\n        name,\n        assertions,\n        gravatarEmail,\n        score,\n      } } = JSON.parse(localStorage.getItem('state'));\n    return (\n      <div className=\"feedback-container\">\n        <header>\n          <img\n            src={ `https://www.gravatar.com/avatar/${md5(gravatarEmail).toString()}` }\n            data-testid=\"header-profile-picture\"\n            alt={ `Name:${name}` }\n          />\n          <h3 data-testid=\"header-player-name\">\n            <span className=\"player\">Jogador:</span>\n            {name}\n          </h3>\n          <p className=\"total-score\" data-testid=\"header-score\">{score}</p>\n        </header>\n        <div className=\"results\">\n          <h2>Resultados</h2>\n          <p className=\"assertions\">\n            Número de acertos:\n            <span data-testid=\"feedback-total-question\">{assertions}</span>\n          </p>\n          <p className=\"points\">\n            Pontuação:\n            <span data-testid=\"feedback-total-score\">{score}</span>\n          </p>\n          <p data-testid=\"feedback-text\">{this.feedBackMessage()}</p>\n          <div className=\"buttons-container\">\n            <button type=\"button\" data-testid=\"btn-play-again\" onClick={ this.playAgain }>\n              Jogar Novamente\n            </button>\n            <button type=\"button\" data-testid=\"btn-ranking\" onClick={ this.goToRanking }>\n              Ver Ranking\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nFeedBack.propTypes = {\n  history: PropTypes.func,\n}.isRequired;\n\nexport default FeedBack;\n"]},"metadata":{},"sourceType":"module"}