{"ast":null,"code":"import { REQUEST_QUESTIONS, REQUEST_QUESTIONS_SUCCESS, REQUEST_QUESTIONS_ERROR } from '../actions';\nconst INITIAL_STATE = {\n  questions: [],\n  isFetching: true,\n  error: ''\n};\n\nconst questionsReducer = (state = INITIAL_STATE, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case REQUEST_QUESTIONS:\n      return { ...state,\n        isFetching: true\n      };\n\n    case REQUEST_QUESTIONS_SUCCESS:\n      return { ...state,\n        questions: action.payload,\n        isFetching: false\n      };\n\n    case REQUEST_QUESTIONS_ERROR:\n      return { ...state,\n        isFetching: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default questionsReducer;","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/redux/reducers/questions.js"],"names":["REQUEST_QUESTIONS","REQUEST_QUESTIONS_SUCCESS","REQUEST_QUESTIONS_ERROR","INITIAL_STATE","questions","isFetching","error","questionsReducer","state","action","console","log","type","payload"],"mappings":"AAAA,SACEA,iBADF,EAEEC,yBAFF,EAGEC,uBAHF,QAIO,YAJP;AAMA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,EADS;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AAC1DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACA,SAAKZ,iBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKJ,yBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,SAAS,EAAEK,MAAM,CAACI,OAFb;AAGLR,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKH,uBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAHT,OAAP;;AAKF;AACE,aAAOL,KAAP;AAnBF;AAqBD,CAvBD;;AAyBA,eAAeD,gBAAf","sourcesContent":["import {\n  REQUEST_QUESTIONS,\n  REQUEST_QUESTIONS_SUCCESS,\n  REQUEST_QUESTIONS_ERROR,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  questions: [],\n  isFetching: true,\n  error: '',\n};\n\nconst questionsReducer = (state = INITIAL_STATE, action) => {\n  console.log(action);\n  switch (action.type) {\n  case REQUEST_QUESTIONS:\n    return {\n      ...state,\n      isFetching: true,\n    };\n  case REQUEST_QUESTIONS_SUCCESS:\n    return {\n      ...state,\n      questions: action.payload,\n      isFetching: false,\n    };\n  case REQUEST_QUESTIONS_ERROR:\n    return {\n      ...state,\n      isFetching: false,\n      error: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default questionsReducer;\n"]},"metadata":{},"sourceType":"module"}