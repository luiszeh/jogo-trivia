{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/components/Question.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Timer from './Timer';\nimport QuestionInfo from './QuestionInfo';\nimport './question.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      seconds: 30,\n      disabled: false\n    };\n    this.count = this.count.bind(this);\n  }\n\n  componentDidMount() {\n    this.count();\n  }\n\n  count() {\n    const sec = 1000;\n    const interval = setInterval(() => {\n      const {\n        seconds\n      } = this.state;\n      this.setState({\n        seconds: seconds - 1\n      });\n\n      if (seconds === 1) {\n        clearInterval(interval);\n        this.setState({\n          seconds: 'Time\\'s Up',\n          disabled: true\n        });\n      }\n    }, sec);\n  }\n\n  render() {\n    const {\n      disabled,\n      seconds\n    } = this.state;\n    const {\n      questions\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Timer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), !questions.length ? null : /*#__PURE__*/React.createElement(QuestionInfo, {\n      questions: questions,\n      disabled: disabled,\n      timer: seconds,\n      count: this.count,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.questionsReducer.questions\n});\n\nQuestion.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/components/Question.js"],"names":["React","Component","connect","PropTypes","Timer","QuestionInfo","Question","constructor","state","seconds","disabled","count","bind","componentDidMount","sec","interval","setInterval","setState","clearInterval","render","questions","props","length","mapStateToProps","questionsReducer","propTypes","arrayOf","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,KAAL;AACD;;AAEDA,EAAAA,KAAK,GAAG;AACN,UAAMG,GAAG,GAAG,IAAZ;AACA,UAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjC,YAAM;AAAEP,QAAAA;AAAF,UAAc,KAAKD,KAAzB;AACA,WAAKS,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAEA,OAAO,GAAG;AADP,OAAd;;AAGA,UAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBS,QAAAA,aAAa,CAACH,QAAD,CAAb;AACA,aAAKE,QAAL,CAAc;AACZR,UAAAA,OAAO,EAAE,YADG;AAEZC,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID;AACF,KAZ2B,EAYzBI,GAZyB,CAA5B;AAaD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAwB,KAAKD,KAAnC;AACA,UAAM;AAAEY,MAAAA;AAAF,QAAgB,KAAKC,KAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEI,CAACD,SAAS,CAACE,MAAX,GACE,IADF,gBAGE,oBAAC,YAAD;AACE,MAAA,SAAS,EAAGF,SADd;AAEE,MAAA,QAAQ,EAAGV,QAFb;AAGE,MAAA,KAAK,EAAGD,OAHV;AAIE,MAAA,KAAK,EAAG,KAAKE,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALN,CADF;AAeD;;AAnD8B;;AAsDjC,MAAMY,eAAe,GAAIf,KAAD,KAAY;AAClCY,EAAAA,SAAS,EAAEZ,KAAK,CAACgB,gBAAN,CAAuBJ;AADA,CAAZ,CAAxB;;AAIAd,QAAQ,CAACmB,SAAT,GAAqB;AACnBL,EAAAA,SAAS,EAAEjB,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,MAA5B,EAAoCC;AAD5B,CAArB;AAIA,eAAe1B,OAAO,CAACqB,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Timer from './Timer';\nimport QuestionInfo from './QuestionInfo';\nimport './question.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      seconds: 30,\n      disabled: false,\n    };\n\n    this.count = this.count.bind(this);\n  }\n\n  componentDidMount() {\n    this.count();\n  }\n\n  count() {\n    const sec = 1000;\n    const interval = setInterval(() => {\n      const { seconds } = this.state;\n      this.setState({\n        seconds: seconds - 1,\n      });\n      if (seconds === 1) {\n        clearInterval(interval);\n        this.setState({\n          seconds: 'Time\\'s Up',\n          disabled: true,\n        });\n      }\n    }, sec);\n  }\n\n  render() {\n    const { disabled, seconds } = this.state;\n    const { questions } = this.props;\n    return (\n      <div className=\"container\">\n        <Timer />\n        { !questions.length\n          ? null\n          : (\n            <QuestionInfo\n              questions={ questions }\n              disabled={ disabled }\n              timer={ seconds }\n              count={ this.count }\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.questionsReducer.questions,\n});\n\nQuestion.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}