{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/pages/Login.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { fetchToken, actionUserInfo } from '../redux/actions';\nimport SettingsButton from '../components/SettingsButton';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      name: '',\n      disable: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.validateLogin = this.validateLogin.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  getToken() {\n    const {\n      getDataFromApi,\n      userInfo,\n      userNameEmail\n    } = this.props;\n    const {\n      name,\n      email\n    } = this.state;\n    getDataFromApi();\n    userNameEmail(name, email);\n    localStorage.setItem('token', userInfo.token);\n  }\n\n  setPlayerData() {\n    const {\n      name,\n      email\n    } = this.state;\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        name,\n        gravatarEmail: email,\n        score: 0\n      }\n    }));\n  }\n\n  handleChange({\n    target: {\n      name,\n      value\n    }\n  }) {\n    this.setState({\n      [name]: value\n    }, () => this.validateLogin());\n  }\n\n  validateLogin() {\n    const {\n      email,\n      name\n    } = this.state;\n    const checkEmail = /(.*)@(.*).com/;\n    const nameLength = 5;\n    const disable = !(checkEmail.test(email) && name.length > nameLength);\n    this.setState({\n      disable\n    });\n  }\n\n  render() {\n    const {\n      email,\n      name,\n      disable\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Tr\\xEDvia\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-player-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Nome:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"input-player-name\",\n      id: \"input-player-name\",\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-gravatar-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"E-mail:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"input-gravatar-email\",\n      id: \"input-gravatar-email\",\n      type: \"text\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      \"data-testid\": \"btn-play\",\n      type: \"button\",\n      disabled: disable,\n      onClick: () => {\n        this.getToken();\n        this.setPlayerData();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Jogar\")), /*#__PURE__*/React.createElement(SettingsButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getDataFromApi: data => dispatch(fetchToken(data)),\n  userNameEmail: info => dispatch(actionUserInfo(info))\n});\n\nconst mapStateToProps = state => ({\n  userInfo: state.userReducer.info\n});\n\nLogin.propTypes = {\n  getDataFromApi: PropTypes.func.isRequired,\n  userInfo: PropTypes.objectOf(PropTypes.object).isRequired,\n  userNameEmail: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/pages/Login.js"],"names":["React","connect","PropTypes","Link","fetchToken","actionUserInfo","SettingsButton","Login","Component","constructor","props","state","email","name","disable","handleChange","bind","validateLogin","getToken","getDataFromApi","userInfo","userNameEmail","localStorage","setItem","token","setPlayerData","JSON","stringify","player","gravatarEmail","score","target","value","setState","checkEmail","nameLength","test","length","render","mapDispatchToProps","dispatch","data","info","mapStateToProps","userReducer","propTypes","func","isRequired","objectOf","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { fetchToken, actionUserInfo } from '../redux/actions';\nimport SettingsButton from '../components/SettingsButton';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      name: '',\n      disable: true,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.validateLogin = this.validateLogin.bind(this);\n    this.getToken = this.getToken.bind(this);\n  }\n\n  getToken() {\n    const { getDataFromApi, userInfo, userNameEmail } = this.props;\n    const { name, email } = this.state;\n    getDataFromApi();\n    userNameEmail(name, email);\n    localStorage.setItem('token', userInfo.token);\n  }\n\n  setPlayerData() {\n    const { name, email } = this.state;\n    localStorage.setItem('state',\n      JSON.stringify({ player: { name, gravatarEmail: email, score: 0 } }));\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value }, () => this.validateLogin());\n  }\n\n  validateLogin() {\n    const { email, name } = this.state;\n    const checkEmail = /(.*)@(.*).com/;\n    const nameLength = 5;\n    const disable = !(checkEmail.test(email) && name.length > nameLength);\n    this.setState({ disable });\n  }\n\n  render() {\n    const { email, name, disable } = this.state;\n    return (\n      <div className=\"login-container\">\n        <h2>Trívia</h2>\n        <form>\n          <label htmlFor=\"input-player-name\">\n            Nome:\n            <input\n              data-testid=\"input-player-name\"\n              id=\"input-player-name\"\n              type=\"text\"\n              name=\"name\"\n              value={ name }\n              onChange={ this.handleChange }\n            />\n          </label>\n          <label htmlFor=\"input-gravatar-email\">\n            E-mail:\n            <input\n              data-testid=\"input-gravatar-email\"\n              id=\"input-gravatar-email\"\n              type=\"text\"\n              name=\"email\"\n              value={ email }\n              onChange={ this.handleChange }\n            />\n          </label>\n          <Link to=\"/game\">\n            <button\n              data-testid=\"btn-play\"\n              type=\"button\"\n              disabled={ disable }\n              onClick={ () => {\n                this.getToken();\n                this.setPlayerData();\n              } }\n            >\n              Jogar\n            </button>\n          </Link>\n          <SettingsButton />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getDataFromApi: (data) => dispatch(fetchToken(data)),\n  userNameEmail: (info) => dispatch(actionUserInfo(info)),\n});\n\nconst mapStateToProps = (state) => ({\n  userInfo: state.userReducer.info,\n});\n\nLogin.propTypes = {\n  getDataFromApi: PropTypes.func.isRequired,\n  userInfo: PropTypes.objectOf(PropTypes.object).isRequired,\n  userNameEmail: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}