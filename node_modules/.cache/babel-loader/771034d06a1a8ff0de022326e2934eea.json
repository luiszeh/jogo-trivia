{"ast":null,"code":"import { REQUEST_TOKEN, REQUEST_TOKEN_SUCCESS, REQUEST_TOKEN_ERROR, SCORE_PLAYER } from '../actions';\nconst INITIAL_STATE = {\n  info: {},\n  isFetching: true,\n  error: '',\n  score: 0,\n  timer: 30\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case REQUEST_TOKEN:\n      return { ...state,\n        isFetching: true\n      };\n\n    case REQUEST_TOKEN_SUCCESS:\n      return { ...state,\n        info: action.payload,\n        isFething: false\n      };\n\n    case REQUEST_TOKEN_ERROR:\n      return { ...state,\n        error: action.payload,\n        isFetching: false\n      };\n\n    case SCORE_PLAYER:\n      return { ...state,\n        score: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/redux/reducers/player.js"],"names":["REQUEST_TOKEN","REQUEST_TOKEN_SUCCESS","REQUEST_TOKEN_ERROR","SCORE_PLAYER","INITIAL_STATE","info","isFetching","error","score","timer","userReducer","state","action","type","payload","isFething"],"mappings":"AAAA,SACEA,aADF,EAEEC,qBAFF,EAGEC,mBAHF,EAIEC,YAJF,QAKO,YALP;AAOA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,UAAU,EAAE,IAFQ;AAGpBC,EAAAA,KAAK,EAAE,EAHa;AAIpBC,EAAAA,KAAK,EAAE,CAJa;AAKpBC,EAAAA,KAAK,EAAE;AALa,CAAtB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKb,aAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELL,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKL,qBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELN,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAFR;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKb,mBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAFT;AAGLR,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKH,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AAxBF;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import {\n  REQUEST_TOKEN,\n  REQUEST_TOKEN_SUCCESS,\n  REQUEST_TOKEN_ERROR,\n  SCORE_PLAYER,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  info: {},\n  isFetching: true,\n  error: '',\n  score: 0,\n  timer: 30,\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case REQUEST_TOKEN:\n    return {\n      ...state,\n      isFetching: true,\n    };\n  case REQUEST_TOKEN_SUCCESS:\n    return {\n      ...state,\n      info: action.payload,\n      isFething: false,\n    };\n  case REQUEST_TOKEN_ERROR:\n    return {\n      ...state,\n      error: action.payload,\n      isFetching: false,\n    };\n  case SCORE_PLAYER:\n    return {\n      ...state,\n      score: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}