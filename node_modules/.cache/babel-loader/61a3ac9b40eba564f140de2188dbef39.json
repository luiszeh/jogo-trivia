{"ast":null,"code":"var _jsxFileName = \"/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/components/QuestionInfo.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport UniqueButton from './UniqueButton';\nimport Button from './Button';\nimport './questioninfo.css';\n\nclass QuestionInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: 0\n    };\n    this.changeColorsAnswer = this.changeColorsAnswer.bind(this);\n    this.changeButtonVisibility = this.changeButtonVisibility.bind(this);\n    this.changeQuestions = this.changeQuestions.bind(this);\n    this.resetQuestions = this.resetQuestions.bind(this);\n  }\n\n  changeButtonVisibility() {\n    const buttonNextQuestion = document.getElementsByClassName('btn-next')[0];\n    buttonNextQuestion.classList.add('visible');\n  }\n\n  changeColorsAnswer() {\n    const correct = document.getElementById('correct-answer');\n    const incorrect = document.getElementsByName('incorrect-answer');\n    incorrect.forEach(question => {\n      question.className += ' questionWrong';\n    });\n    correct.className += ' questionCorrect';\n  }\n\n  changeQuestions() {\n    this.setState(p => ({\n      index: p.index + 1\n    }));\n  }\n\n  resetQuestions() {\n    const correct = document.getElementById('correct-answer');\n    const incorrect = document.getElementsByName('incorrect-answer');\n    incorrect.forEach(question => question.classList.remove('questionWrong'));\n    correct.classList.remove('questionCorrect');\n  }\n\n  sumUserPoints() {\n    const basePoints = 10;\n    const {\n      timer,\n      questions\n    } = this.props;\n    const {\n      index\n    } = this.state;\n\n    const difficultyMultiplier = () => {\n      if (questions[index].difficulty === 'easy') {\n        return 1;\n      }\n\n      if (questions[index].difficulty === 'medium') {\n        return 2;\n      }\n\n      if (questions[index].difficulty === 'hard') {\n        const hardMultiplier = 3;\n        return hardMultiplier;\n      }\n    };\n\n    const points = basePoints + timer * difficultyMultiplier();\n    const locals = JSON.parse(localStorage.getItem('state'));\n    localStorage.setItem('state', JSON.stringify({\n      player: { ...locals.player,\n        assertions: locals.player.assertions + 1,\n        score: locals.player.score + points\n      }\n    }));\n  }\n\n  renderQuestions() {\n    const {\n      questions\n    } = this.props;\n    const {\n      index\n    } = this.state;\n    const {\n      question\n    } = questions[index];\n    const fixedQuestion = question.replace(/&quot;/gi, '').replace(/&#039;/gi, '').replace(/&eacute/gi, '').replace(/&amp/gi, '');\n    return fixedQuestion;\n  }\n\n  render() {\n    const {\n      index\n    } = this.state;\n    const {\n      questions,\n      disabled\n    } = this.props;\n    const finalQuestion = 5;\n    if (index === finalQuestion) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 41\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"question-category\",\n      \"data-testid\": \"question-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Category:\"), `${questions[index].category}`), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"question-text\",\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Question:\"), `${this.renderQuestions()}`), /*#__PURE__*/React.createElement(UniqueButton, {\n      disabled: disabled,\n      className: \"correct-answer\",\n      onClick: () => {\n        this.changeButtonVisibility();\n        this.changeColorsAnswer();\n        this.sumUserPoints();\n      },\n      innerText: questions[index].correct_answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }), questions[index].incorrect_answers.map((incorrect, i) => /*#__PURE__*/React.createElement(Button, {\n      className: \"incorrect-answer\",\n      key: i,\n      dataTestId: `wrong-answer-${i}`,\n      onClick: () => {\n        this.changeButtonVisibility();\n        this.changeColorsAnswer();\n      },\n      innerText: incorrect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(UniqueButton, {\n      className: \"btn-next\",\n      innerText: \"PR\\xD3XIMA\",\n      onClick: () => {\n        this.changeQuestions();\n        this.resetQuestions();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nQuestionInfo.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  disabled: PropTypes.bool,\n  timer: PropTypes.number.isRequired\n};\nQuestionInfo.defaultProps = {\n  disabled: false\n};\nexport default QuestionInfo;","map":{"version":3,"sources":["/home/luisffg/Projetos/sd-012-project-trivia-react-redux/src/components/QuestionInfo.js"],"names":["React","Component","PropTypes","Redirect","UniqueButton","Button","QuestionInfo","constructor","props","state","index","changeColorsAnswer","bind","changeButtonVisibility","changeQuestions","resetQuestions","buttonNextQuestion","document","getElementsByClassName","classList","add","correct","getElementById","incorrect","getElementsByName","forEach","question","className","setState","p","remove","sumUserPoints","basePoints","timer","questions","difficultyMultiplier","difficulty","hardMultiplier","points","locals","JSON","parse","localStorage","getItem","setItem","stringify","player","assertions","score","renderQuestions","fixedQuestion","replace","render","disabled","finalQuestion","category","correct_answer","incorrect_answers","map","i","propTypes","arrayOf","object","isRequired","bool","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport UniqueButton from './UniqueButton';\nimport Button from './Button';\nimport './questioninfo.css';\n\nclass QuestionInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: 0,\n    };\n\n    this.changeColorsAnswer = this.changeColorsAnswer.bind(this);\n    this.changeButtonVisibility = this.changeButtonVisibility.bind(this);\n    this.changeQuestions = this.changeQuestions.bind(this);\n    this.resetQuestions = this.resetQuestions.bind(this);\n  }\n\n  changeButtonVisibility() {\n    const buttonNextQuestion = document.getElementsByClassName('btn-next')[0];\n    buttonNextQuestion.classList.add('visible');\n  }\n\n  changeColorsAnswer() {\n    const correct = document.getElementById('correct-answer');\n    const incorrect = document.getElementsByName('incorrect-answer');\n    incorrect.forEach((question) => { question.className += ' questionWrong'; });\n    correct.className += ' questionCorrect';\n  }\n\n  changeQuestions() {\n    this.setState((p) => ({ index: p.index + 1 }));\n  }\n\n  resetQuestions() {\n    const correct = document.getElementById('correct-answer');\n    const incorrect = document.getElementsByName('incorrect-answer');\n    incorrect.forEach((question) => question.classList.remove('questionWrong'));\n    correct.classList.remove('questionCorrect');\n  }\n\n  sumUserPoints() {\n    const basePoints = 10;\n    const { timer, questions } = this.props;\n    const { index } = this.state;\n    const difficultyMultiplier = () => {\n      if (questions[index].difficulty === 'easy') {\n        return 1;\n      }\n      if (questions[index].difficulty === 'medium') {\n        return 2;\n      }\n      if (questions[index].difficulty === 'hard') {\n        const hardMultiplier = 3;\n        return hardMultiplier;\n      }\n    };\n    const points = basePoints + (timer * difficultyMultiplier());\n    const locals = JSON.parse(localStorage.getItem('state'));\n    localStorage.setItem('state', JSON.stringify({\n      player: {\n        ...locals.player,\n        assertions:\n        locals.player.assertions + 1,\n        score: locals.player.score + points },\n    }));\n  }\n\n  renderQuestions() {\n    const { questions } = this.props;\n    const { index } = this.state;\n    const { question } = questions[index];\n    const fixedQuestion = question\n      .replace(/&quot;/gi, '')\n      .replace(/&#039;/gi, '')\n      .replace(/&eacute/gi, '')\n      .replace(/&amp/gi, '');\n    return fixedQuestion;\n  }\n\n  render() {\n    const { index } = this.state;\n    const { questions, disabled } = this.props;\n    const finalQuestion = 5;\n    if (index === finalQuestion) return <Redirect to=\"/feedback\" />;\n    return (\n      <div className=\"question-container\">\n        <p className=\"question-category\" data-testid=\"question-category\">\n          <span className=\"category\">Category:</span>\n          {`${questions[index].category}`}\n        </p>\n        <p data-testid=\"question-text\" className=\"question-text\">\n          <span className=\"question\">Question:</span>\n          {`${this.renderQuestions()}`}\n        </p>\n        <UniqueButton\n          disabled={ disabled }\n          className=\"correct-answer\"\n          onClick={ () => {\n            this.changeButtonVisibility();\n            this.changeColorsAnswer();\n            this.sumUserPoints();\n          } }\n          innerText={ questions[index].correct_answer }\n        />\n        {questions[index].incorrect_answers.map((incorrect, i) => (\n          <Button\n            className=\"incorrect-answer\"\n            key={ i }\n            dataTestId={ `wrong-answer-${i}` }\n            onClick={ () => {\n              this.changeButtonVisibility();\n              this.changeColorsAnswer();\n            } }\n            innerText={ incorrect }\n          />\n        ))}\n        <UniqueButton\n          className=\"btn-next\"\n          innerText=\"PRÓXIMA\"\n          onClick={ () => {\n            this.changeQuestions();\n            this.resetQuestions();\n          } }\n        />\n      </div>\n    );\n  }\n}\n\nQuestionInfo.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  disabled: PropTypes.bool,\n  timer: PropTypes.number.isRequired,\n};\n\nQuestionInfo.defaultProps = {\n  disabled: false,\n};\n\nexport default QuestionInfo;\n"]},"metadata":{},"sourceType":"module"}